<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "subscriber".
 *
 * @property int $id
 * @property string $email Получатель
 * @property int $event_id Событие
 * @property string $event Событие
 * @property int $is_blocked Заблокирован
 * @property string|null $created_at Дата добавления
 * @property string|null $updated_at Дата редактирования
 */
class Subscriber extends \yii\db\ActiveRecord
{
    const EVENT_SIGNUP = 1;
    const EVENT_CONFIRM = 2;
    const EVENT_LOGIN = 3;
    const EVENT_LOGOUT = 4;
    const EVENT_MESSAGE = 5;

    const EVENT_LIST = [
        self::EVENT_SIGNUP => 'Регистрация',
        self::EVENT_CONFIRM => 'Верификация',
        self::EVENT_LOGIN => 'Вход',
        self::EVENT_LOGOUT => 'Выход',
        self::EVENT_MESSAGE => 'Отправка сообщения'
    ];

    /**
     * @return string
     */
    public function getEvent()
    {
        return self::EVENT_LIST[$this->event_id] ?? '';
    }

    /**
     * @param $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        if ($this->hasAttribute('created_at')) {
            $time = date('Y-m-d H:i:s');
            if ($this->isNewRecord && !$this->created_at) {
                $this->created_at = $time;
            }
            $this->updated_at = $time;
            if ($this->errors) {
                \Yii::info($this->getErrorSummary(false)[0]);
            }
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'subscriber';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['email', 'event'], 'required'],
            [['event_id', 'is_blocked'], 'integer'],
            [['created_at', 'updated_at'], 'safe'],
            [['email'], 'string', 'max' => 255],
            [['email'], 'email'],
            [['email', 'event_id'], 'unique', 'targetAttribute' => ['email', 'event_id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'email' => 'Получатель',
            'event_id' => 'Событие',
            'is_blocked' => 'Заблокирован',
            'created_at' => 'Дата добавления',
            'updated_at' => 'Дата редактирования',
        ];
    }
}
